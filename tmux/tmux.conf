# ` is an interesting key for a prefix
#set-option -g prefix C-`
set-option -g prefix C-a
set -g xterm-keys on
 

unbind-key C-b
bind-key C-a last-window
bind-key ` last-window
bind-key a send-prefix

 

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `
bind-key -n M-c run "tmux save-buffer -b 0 - | xsel -i -p -b"
bind-key -n M-C choose-buffer "run \"tmux save-buffer -b %% - | xsel -i -p -b\" "
bind-key -n M-\; command-prompt
bind-key -n M-v run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer"
#bind-key -n M-n copy-pipe "cat >/tmp/foo"

 

# 0 is too far from ` ;)
set -g base-index 1

 

#set-option -g default-terminal “xterm-256color"
#set-option -g mouse-select-pane on
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string ‘#H:#S.#I.#P #W #T’ # window number,program name,active (or not)
set-option -g visual-bell off
#set-option -g mode-mouse copy-mode

 

setw -g mode-keys vi
setw -g mode-mouse on
setw -g monitor-activity on

 

bind e previous-window
bind f next-window
bind E swap-window -t -1
bind F swap-window -t +1
# bind j up-pane
# bind k down-pane

 

#set -g status-left "#[fg=red]#H#[fg=green]:#[fg=white]#S #[fg=green]][#[default]"
set -g status-left "#[bg=colour18]#[fg=colour2] #H #[default]|"
set -g status-position top
set -g status-interval 5
set -g status-right "|#[bg=colour118]#[fg=black] %H:%M #[default]"

set-option -g status-utf8 on
# set-option -g status-justify centre
set-option -g status-justify left
set-option -g status-bg colour17
set-option -g status-fg black
set-option -g status-left-length 40
set-option -g status-right-length 80

 

set-option -g pane-active-border-fg black
set-option -g pane-active-border-bg colour51
set-option -g pane-border-fg colour51
set-option -g pane-border-bg black

 

set-option -g message-fg black
set-option -g message-bg green

 

#setw -g mode-bg black

 

setw -g window-status-current-format "[#I:#W#F]"
setw -g window-status-bg colour17
setw -g window-status-fg colour51
setw -g window-status-current-fg white
setw -g window-status-current-bg black
setw -g window-status-bell-attr default
setw -g window-status-bell-fg red
setw -g window-status-content-attr default
setw -g window-status-content-fg red
setw -g window-status-activity-attr default
setw -g window-status-activity-fg yellow




set -g history-limit 32768

bind r source-file ~/.tmux.conf

bind-key h split-window -h
bind-key v split-window 

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on with ^B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

unbind +
bind + \
  new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  swap-pane -s tmux-zoom.0 \;\
  select-window -t tmux-zoom
    
unbind -
bind - \
  last-window \;\
  swap-pane -s tmux-zoom.0 \;\
  kill-window -t tmux-zoom

bind-key R source-file ~/.tmux.conf \; \
                   display-message "Reloaded"

#set -g default-terminal "xterm-256color"

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#is_vim='true'
bind -n C-Left if-shell "$is_vim" "send-keys C-Left" "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-Down" "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-Up" "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
